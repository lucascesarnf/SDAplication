/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package faicebroiskious;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.thrift.TException;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransport;
import resources.Grafo.Handler;
import resources.Grafo.Vertice;

/**
 *
 * @author lucascesarnf
 */
public class ListaDeAmigos extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListaDeAmigos
     */
    public ListaDeAmigos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "ID", "Orien. Sexual", "Ident. Gênero "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setVertice(Vertice v) {
        vertice = v;
        try {
            int port = 7070;
            TTransport transport = new TSocket("localhost", port);
            transport.open();
            TProtocol protocol = new TBinaryProtocol(transport);
            Handler.Client client = new Handler.Client(protocol);
            try {
   
            System.out.println("Procurar visinhos do " + vertice.nome);
                amigos = client.listVizinhosDoVertice(vertice.nome);
                System.out.println("Procurar visinhos do cara aqui:" + amigos);
            } catch (Exception x) {
             System.out.println("Deu ruim");
            }
        } catch (TException ex) {
            ex.printStackTrace();
        }
    }

    public void showFriends() {
        if (amigos != null){
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            Object rowData[] = new Object[4];
            for (int i = 0; i < amigos.size(); i++) {
                rowData[0] = amigos.get(i).desc;
                rowData[1] = amigos.get(i).nome;
                rowData[2] = getOrientSex(amigos.get(i).cor);// amigos.get(i).nome;
                rowData[3] = getIdentGen((int) amigos.get(i).peso);//amigos.get(i).nome;
                model.addRow(rowData);
            }
        }
    }

    public String getOrientSex(int i) {
        switch (i) {
            case 0:
                return "Hétero";
            case 1:
                return "Homo";
            case 2:
                return "Bi";
            default:
                return "Undefined";
        }
    }

    public String getIdentGen(int i) {
        switch (i) {
            case 0:
                return "Homem";
            case 1:
                return "Mulher";
            default:
                return "Outxs";
        }
    }
    private Vertice vertice;
    private List<Vertice> amigos;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
